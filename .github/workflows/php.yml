name: Testing XOOPS CMS

on: [push, pull_request]

jobs:
  tests:
    strategy:
      matrix:
        php-versions: ['7.4', '8.0', '8.1', '8.2', '8.3']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl, pdo_sqlite, pdo_mysql
          coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --no-progress --prefer-dist --optimize-autoloader
          composer run-script post-install-cmd

      - name: Run PHPUnit
        run: vendor/bin/phpunit --configuration phpunit.xml --coverage-text --coverage-clover=coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  coding-standard:
    name: Coding Standard
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Install PHP-CS-Fixer
        run: composer global require friendsofphp/php-cs-fixer

      - name: PHP CodeSniffer
        run: vendor/bin/phpcs --standard=phpcs.xml

      - name: PHP-CS-Fixer dry run
        run: ~/.composer/vendor/bin/php-cs-fixer fix --dry-run --diff

      - name: PHP-CS-Fixer apply fixes
        if: always() # This ensures that the step runs even if the previous step fails
        run: ~/.composer/vendor/bin/php-cs-fixer fix

  static-analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Install PHPStan
        run: composer require --dev phpstan/phpstan

      - name: Generate PHPStan Baseline
        run: vendor/bin/phpstan analyse --generate-baseline --no-progress src/

      - name: Static Analysis using PHPStan
        run: vendor/bin/phpstan analyse --no-progress --memory-limit=2G src/

  qodana:
    name: Qodana Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Qodana
        uses: JetBrains/qodana-action@v2024.1.0
        with:
          project-dir: .
          results-dir: qodana-results
          cache-dir: .qodana-cache
